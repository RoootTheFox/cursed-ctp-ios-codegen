#!/bin/bash

# get all colors
color_list=$(.theos/obj/debug/uicolorutil | grep -v "(null)")

declare -A colors

# put colors
while IFS= read -r col; do
	name=${col%% *}
	name=${name//#/}
	value=${col##* }
	value=${value//#/}
	value="${value,,}" # lowercase !!
	#echo "$name => $value hi: ${colors[$value]}"
	if [[ -v colors[$value] ]]; then
		# color known, add it to the value
		colors[$value]="${colors[$value]} $name"
	else
		# color unknown, add it to the map
		colors[$value]="$name"
	fi
done <<< "$color_list"

#for hex in "${!colors[@]}"; do
#	printf "%s=%s\n" "$hex" "${colors[$hex]}"
#done

# cursed codegen
source mappings.sh

outfile="ctpios-gen/Tweak.x"

read -r -d '' fileheader << MEOWMEOW
/*
* THIS FILE IS AUTOGENERATED BY sort_colors.sh !!
* DO NOT EDIT MANUALLY, YOUR CHANGES WILL BE OVERRIDDEN
*/

#import <UIKit/UIKit.h>
#import <UIKit/UIColor.h>
#import <Tweak.h>

// ColorHelper is shamelessly stolen from Echo
#import "ColorHelper.h"

%hook UIColor
MEOWMEOW

echo "$fileheader" > $outfile

for hex in "${!colors[@]}"; do
	if [[ -v mappings[$hex] ]]; then
		repl=${mappings[$hex]}
		names=${colors[$hex]}
		names=($names)
		for name in "${names[@]}"; do
			if [ "$repl" == "placeholder" ]; then continue; fi
			#echo "+(id)${name} { return UIColorFromRGB(0x$repl); }" >> $outfile
			echo "+(id)${name} { return colors[${repl^^}]; }" >> $outfile
		done
		#printf "%s=%s\n" "$hex" "${colors[$hex]}"
	else
		echo "warning: no mapping found for $hex"
	fi
done

read -r -d '' filefooter << MEOWMEOW
%end

%ctor {
	[ColorHelper updateColors];
}
MEOWMEOW

echo "$filefooter" >> $outfile
